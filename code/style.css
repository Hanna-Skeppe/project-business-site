
@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@300;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@300;700&family=Open+Sans:ital,wght@0,300;0,400;1,300;1,400&display=swap');
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  font-size: 1rem;
}

body {
  /* margin: 0; */
  /* added this font-size when watching tutorial on accordion, because he used the rem-unit for font-size which I think sets the fonts relative to the size specified in the body. */
  /* font-size: 16px; */
  font-family: 'Montserrat', sans-serif;
  background-color: #fff;
  /* unsure as whether to set color below on whole body. This is from the tutorial */
  /* color: #495867; */
}
                                          /* HEADER NAVBAR STARTS HERE */
header {
  position: fixed;
  width: 100%;
  background: rgba(73, 88, 103, 0.8);
  padding: 6px 24px;
  /* text-align: left; */
  color: white;
  /*margin: 0;*/
  letter-spacing: 1px;
  z-index: 9; /* same as for navbar: not sure if I should have z-index here or not*/
}

header .navbar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  height: 70px;
  /* position: sticky; Not sure if I should use this as I have position fixed on the header: 
  I didn't get position sticky to work. The header lost ist transparent colour when I set it to position sticky, 
  and even though I put a negative top margin on the hero container, and z-index 10 on the header it didn't work.*/
  top: 0px;
  /* background-color: black; */
  margin: 0px;
  overflow: hidden;
  z-index: 9; /* Not sure if z-index works on this one. I want it to be ontop of 
  the hero section and for it to have opacity and stick to the top 
  when I scroll down*/
}

.navbar img {
  width: 40px;
  height: 40px;
  margin-left: 20px;
}

.navbar h2 {
  font-family: 'Montserrat', sans-serif;
  font-weight: 300;
  font-size: 24px;
  margin: 0;
  color: #E7AD99;
}

.hamburger {
  display: flex;
  width: 35px;
  height: 28px;
  flex-direction: column;
  justify-content: space-between;
  margin-right: 20px;
}

.hamburger div {
  width: 35px;
  height: 5px;
  background-color: #E7AD99;
  border-radius: 5px;

}

                          /* HERO CONTAINER STARTS HERE */

hero-container {
  /* display: flex; only @ (min-width: 660px)*/
  /* flex-direction: column; only @ (min-width: 660px)*/
  /* justify-content: center; only @ (min-width: 660px)*/
  /* height: 725px; only @ (min-width: 660px)*/
  /* max-height: 80vh; only @ (min-width: 660px)*/
  /* padding-top: 50px; only @ (min-width: 660px)*/
  position: relative;
  /* overflow: hidden; */
  height: 80vh;
  /* the background-values below weren't set when I checked in the inspector, 
  so maybe I should remove them if the page looks weird */
  background-size: cover;
  background-position: center center;
  background: linear-gradient(90deg, #833ab4 0%, #75adc0 50%, #fcb045 100%);
  /* should I put a margin-top on the hero-container as to not make the header nav cover the top of the hero? 
  (margin the same size as the height of the header nav) */
}

.hero-content {
  position: relative;
  height: 80vh;
  padding: 90px 0;
  z-index: 5;
}

.hero-box {
  position: relative;
  text-align: center;
  margin: 170px 40px 60px 40px;
  z-index: 6;
  /* height: 50vh; */
}

.hero-headline {
  font-family: 'Montserrat', sans-serif;
  font-weight: 700;
  font-size: 68px;
  /* color: #fff; */
  color: #ECC8AF;
  z-index: 7;
  margin: 0;
}

.hero-overlay {
  /* width: 100%; */
  /* height: 100%; */
  background-color: #000;
  opacity: 0.25;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  z-index: 4;
}

.hero-video-playing {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
  /* overflow: hidden; */
  object-fit: cover;
  object-position: top center;
}

                                /* INTRO-SECTION STARTS HERE */

.intro-wrapper {
  margin: 40px;
}

.intro-section {
  display: flex;
  flex-direction: column;
}

.intro-heading {
  align-self: center;
}

.intro-heading h2 {
  font-family: 'Montserrat', sans-serif;
  font-weight: 700;
  color: #495867;
  color: #C18C5D;
  font-size: 24px;
}

.introtext {
  display: flex;
}

.introtext p {
  font-family: 'Open Sans', sans-serif;
  font-weight: 500;
  font-size: 14px;
  color: #495867;
  width: 33%;
  margin-right: 20px;
}

.introtext p:last-of-type {
  margin-right: 0;
}
                                  /* ACCORDION STARTS HERE */
.accordion-header {
  color: #495867;
  text-align: center;
  font-weight: 500;
  /* When using rem for margin, is is sized relative to the font-size set in the same element. So this means that margin 2.5rem here is 2 times 2.5 rem (which is the font-size here): if there is no font-size specified in rem-units in this element, the margin-rem sets itself relative to the root*/
  margin: 1rem 0;
  font-size: 2rem;
}

.accordion {
  width: 90%;
  max-width: 1000px;
  /* margin auto on the sides as to center the FAQ */
  margin: 2rem auto;
}

.accordion-item {
  background-color: #ECC8AF;
  color: #111;
  margin: 1rem 0;
  border-radius: 0.5rem;
  /* 0 horizontal, 4px vertical offset, 8px blur and 0 spread*/
  box-shadow: 0 4px 8px 0 rgba(0,0,0,0.35);
}

.accordion-item:nth-child(even) {
  /* background-color: #E7AD99; */
  background-color: #C18C5D;
}

/* When the accordion is open, the .active class will be added to accordion-item-header, changing the dispayed symbol from plus to minus*/
.accordion-item-header {
  /* padding 3rem to the right to make place for the pseudo-element (+/-) */
  padding: 0.5rem 3rem 0.5rem 1rem;
  /* min-height set to 3.5rem to make sure that if the header expands to two lines, then the total height of the header would be 2.5rem plus padding 1rem, which equals the minimum height of 3.5rem. In that way we can be sure that the content fits if header expands to two lines*/
  min-height: 3.5rem;
  line-height: 1.25rem;
  font-weight: 700;
  color: #495867;
  /* color: #ECC8AF; */
  display: flex;
  /* vertically aligns items: */
  align-items: center;
  /* position relative because I will place the pseudo-element in absolute position relative to the header */
  position: relative;
  cursor: pointer;
}

/* Add the symbol with help of the ::after pseudo-element. Using :: to distinguish between pseudo-elements and pseudo-classes */

.accordion-item-header::after {
  /* CSS entity-code for plus-sign below */
  content: "\002B";
  color: #495867;
  font-size: 2rem;
  /* we position the plus relative and place it 1rem from the right side of the element */
  position: absolute;
  right: 1rem;
}

/* whenever the active class below is added to the accordion, the pseudo-element will change from plus to minus and when active class is removed it will change to plus sign*/
.accordion-item-header.active::after {
  content: "\2212";
}

.accordion-item-body {
  max-height: 0;
  overflow: hidden;
  transition: max-height 0.3s ease-out;
  /* background-color: #C18C5D; */
  background-color: #495867;
  border-bottom-left-radius: 0.5rem;
  border-bottom-right-radius: 0.5rem;
}

.accordion-item-body-content {
  padding: 1rem;
  line-height: 1.5rem;
  color: #fff;
}

@media (max-width:767px) {
  html {
    font-size: 14px;
  }
}
/* the + sign is used to select the sibling that comes immediately next to the element you selected.
in this case it is the div with the answer class next to the div with the active class.
this can be used for the FAQ-accordion. read more here: https://www.w3schools.com/css/css_combinators.asp */

/* .accordion-wrapper {
  border: 1px solid #000;
  margin: 40px;
} */

/* .accordion-section {
  display: flex;
  flex-direction: column;
  /* align-items: center; Detta gör att background-color inte funkar. Varför?*/
  /* justify-content: center; */
  /* text-align: center;
} */ 

/* .accordion-heading {
  background-color: #ECC8AF;
} */
/* .accordion-heading h2 {
  color:  #495867;
  margin: 0;
  /* width: 50vw; */
  /* padding-top: 20px; */
  /* height: 60px;
  font-family: 'Montserrat', sans-serif;
}  */

/* .answer {
  display: none
} */
 /* .active + .answer {
  display: inline-block;
  /* some styling here */
  /* }  */ 


@media (max-width: 600px) {

  header {
    padding: 0;
  }

  .navbar h2 {
    margin: 0 15px;
    font-size: 20px;
  }
  .hamburger {
    margin-right: 8px;
  }
  .navbar img {
    margin-left: 8px;
  }

  .hero-content {
    padding: 100px 0 0 0;
  }

  .hero-box {
    margin: 90px 40px 0 40px;
  }

  .hero-headline {
    font-size: 48px;
  }

  .introtext {
    display: flex;
    flex-direction: column;
  }
  
  .introtext p {
    width: 100%;
    margin: 5px 0;
  }

}